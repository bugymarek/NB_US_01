/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Core.Cadaster;
import Core.Core;
import com.google.gson.Gson;
import com.google.gson.JsonArray;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import java.awt.Color;
import java.awt.Font;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.Properties;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.text.BadLocationException;
import javax.swing.text.Style;
import javax.swing.text.StyleConstants;
import javax.swing.text.StyledDocument;
import javax.swing.text.html.HTMLDocument;
import javax.swing.text.html.HTMLEditorKit;
import javax.swing.text.html.StyleSheet;

/**
 *
 * @author Bugy
 */
public class Main extends javax.swing.JDialog {

    private Core core;
    private ManagerHTML managerHTML;
    private java.awt.Frame parent;

    /**
     * Creates new form Main
     */
    public Main(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        this.parent = parent;
        initComponents();
        configTextPane();
        core = new Core();
        managerHTML = new ManagerHTML();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        buttonGroup3 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jTabbedPane8 = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jPanel9 = new javax.swing.JPanel();
        jTextFieldIdCadaster = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFieldNameCadaster = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jPanel10 = new javax.swing.JPanel();
        jTextFieldFirstName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jTextFieldLastName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldRC = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        jXDatePickerBirthDate = new org.jdesktop.swingx.JXDatePicker();
        jPanel11 = new javax.swing.JPanel();
        jTextFieldIdLetterOfOwnership = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextFieldLetterOfOwnershipIdCadaster = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jPanel12 = new javax.swing.JPanel();
        jTextFieldRealtyLetterId = new javax.swing.JTextField();
        jTextFieldRealtyCadasterId = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jTextFieldRealtyId = new javax.swing.JTextField();
        jTextFieldRealtyAddress = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jButton7 = new javax.swing.JButton();
        jTextFieldRealtyDescription = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel27 = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jTextFieldDelete13CadasaterId = new javax.swing.JTextField();
        jButton20 = new javax.swing.JButton();
        jTextFieldDelete13LetterId = new javax.swing.JTextField();
        jLabel47 = new javax.swing.JLabel();
        jTextFieldDelete13RC = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jPanel28 = new javax.swing.JPanel();
        jLabel49 = new javax.swing.JLabel();
        jTextFieldDelete19NewLetterId = new javax.swing.JTextField();
        jButton21 = new javax.swing.JButton();
        jTextFieldDelete19CadasterId = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        jTextFieldDelete19LetterId = new javax.swing.JTextField();
        jLabel51 = new javax.swing.JLabel();
        jPanel30 = new javax.swing.JPanel();
        jLabel54 = new javax.swing.JLabel();
        jTextFieldDelete20RealtyId = new javax.swing.JTextField();
        jButton23 = new javax.swing.JButton();
        jTextFieldDelete20CadasterId = new javax.swing.JTextField();
        jLabel55 = new javax.swing.JLabel();
        jTextFieldDelete20LetterId = new javax.swing.JTextField();
        jLabel56 = new javax.swing.JLabel();
        jPanel31 = new javax.swing.JPanel();
        jButton24 = new javax.swing.JButton();
        jTextFieldDelete22CadasterId = new javax.swing.JTextField();
        jLabel58 = new javax.swing.JLabel();
        jTextFieldDelete22NewCadasterId = new javax.swing.JTextField();
        jLabel57 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        jPanel13 = new javax.swing.JPanel();
        jTextFieldOwnershipRC = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jTextFieldOwnershipCadasterID = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextFieldOwnershipLetterID = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jTextFieldOwnershipPercents = new javax.swing.JTextField();
        jLabel21 = new javax.swing.JLabel();
        jPanel15 = new javax.swing.JPanel();
        jTextFieldPrimaryResidenceRC = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextFieldPrimaryResidencCadasterName = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jTextFieldPrimaryResidenceRealtyID = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jPanel26 = new javax.swing.JPanel();
        jTextFieldTask11RCOwner = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        jTextFieldTask11RCNewOwner = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        jTextFieldTask11RealtyId = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        jButton19 = new javax.swing.JButton();
        jTextFieldTask11CadasterId = new javax.swing.JTextField();
        jLabel45 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jPanel21 = new javax.swing.JPanel();
        jLabel34 = new javax.swing.JLabel();
        jTextFieldSelect2RC = new javax.swing.JTextField();
        jButton15 = new javax.swing.JButton();
        jPanel22 = new javax.swing.JPanel();
        jLabel35 = new javax.swing.JLabel();
        jTextFieldSelect1_5RealtyId = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jTextFieldSelect1_5CadasterID_Name = new javax.swing.JTextField();
        jComboBoxSelect1_5CadasterID_Name = new javax.swing.JComboBox<>();
        jButton16 = new javax.swing.JButton();
        jPanel24 = new javax.swing.JPanel();
        jLabel38 = new javax.swing.JLabel();
        jTextFieldSelect4_6LetterId1 = new javax.swing.JTextField();
        jLabel41 = new javax.swing.JLabel();
        jTextFieldSelect4_6CadasterID_Name = new javax.swing.JTextField();
        jComboBoxSelect4_6CadasterID_Name = new javax.swing.JComboBox<>();
        jButton18 = new javax.swing.JButton();
        jPanel7 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jPanel14 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        jTextFieldSelectRealtiesNameCadaster = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jPanel20 = new javax.swing.JPanel();
        jLabel33 = new javax.swing.JLabel();
        jButton13 = new javax.swing.JButton();
        jTextFieldSelectAllRealtiesOfOwnerRC = new javax.swing.JTextField();
        jPanel19 = new javax.swing.JPanel();
        jLabel25 = new javax.swing.JLabel();
        jTextFieldSelectRealtiesOfOwnerRC = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        jTextFieldSelectRealtiesOfOwnerCadasterId = new javax.swing.JTextField();
        jPanel23 = new javax.swing.JPanel();
        jLabel37 = new javax.swing.JLabel();
        jTextFieldSelect3CadasterId = new javax.swing.JTextField();
        jButton17 = new javax.swing.JButton();
        jTextFieldSelect3LetterId = new javax.swing.JTextField();
        jLabel39 = new javax.swing.JLabel();
        jTextFieldSelect3RealtyId = new javax.swing.JTextField();
        jLabel40 = new javax.swing.JLabel();
        jPanel29 = new javax.swing.JPanel();
        jLabel52 = new javax.swing.JLabel();
        jTextFieldCvikoCadasterID = new javax.swing.JTextField();
        jButton25 = new javax.swing.JButton();
        jPanel25 = new javax.swing.JPanel();
        jButton14 = new javax.swing.JButton();
        jButton22 = new javax.swing.JButton();
        jPanel8 = new javax.swing.JPanel();
        jLabel22 = new javax.swing.JLabel();
        jTextFieldGeneratorCadastersCount = new javax.swing.JTextField();
        jLabel23 = new javax.swing.JLabel();
        jTextFieldGeneratorLettersCountOnCadaster = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        jTextFieldGeneratorPersonsCount = new javax.swing.JTextField();
        jButton11 = new javax.swing.JButton();
        jPanel16 = new javax.swing.JPanel();
        jTextFieldGeneratorRealtiesCountOnLetterFrom = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        jTextFieldGeneratorRealtiesCountOnLetterTo = new javax.swing.JTextField();
        jPanel18 = new javax.swing.JPanel();
        jTextFieldGeneratorPersonsCountOnRealtyFrom = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jTextFieldGeneratorPersonsCountOnRealtyTo = new javax.swing.JTextField();
        jPanel17 = new javax.swing.JPanel();
        jTextFieldGeneratorOwnershipCountOnLetterFrom = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jTextFieldGeneratorOwnershipCountOnLetterTo = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPaneConsole = new javax.swing.JTextPane();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Pridať kataster (21)"));

        jTextFieldIdCadaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdCadasterActionPerformed(evt);
            }
        });

        jLabel1.setText("Číslo katastra * ");

        jLabel2.setText("Názov katastra * ");

        jTextFieldNameCadaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldNameCadasterActionPerformed(evt);
            }
        });

        jButton1.setText("Pridaj");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldIdCadaster, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldNameCadaster, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jButton1)
                .addGap(34, 34, 34))
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldIdCadaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldNameCadaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(jPanel9Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jButton1)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Pridať obyvateľa (16)"));

        jTextFieldFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldFirstNameActionPerformed(evt);
            }
        });

        jLabel3.setText("Meno *");

        jButton5.setText("Pridaj");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel5.setText("Priezvisko *");

        jTextFieldLastName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLastNameActionPerformed(evt);
            }
        });

        jLabel4.setText("Rodne číslo *");

        jTextFieldRC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRCActionPerformed(evt);
            }
        });

        jLabel6.setText("Dátum narodenia *");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldRC, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jXDatePickerBirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(194, 194, 194))
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 7, Short.MAX_VALUE)
                        .addComponent(jTextFieldFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldRC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel10Layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jXDatePickerBirthDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton5)
                .addGap(7, 7, 7))
        );

        jPanel11.setBorder(javax.swing.BorderFactory.createTitledBorder("Pridať list vlastníctva (17)"));

        jTextFieldIdLetterOfOwnership.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldIdLetterOfOwnershipActionPerformed(evt);
            }
        });

        jLabel7.setText("Číslo listiny * ");

        jLabel8.setText("Číslo katastra * ");

        jTextFieldLetterOfOwnershipIdCadaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldLetterOfOwnershipIdCadasterActionPerformed(evt);
            }
        });

        jButton6.setText("Pridaj");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel11Layout = new javax.swing.GroupLayout(jPanel11);
        jPanel11.setLayout(jPanel11Layout);
        jPanel11Layout.setHorizontalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldIdLetterOfOwnership, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldLetterOfOwnershipIdCadaster, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(34, 34, 34)
                .addComponent(jButton6)
                .addGap(34, 34, 34))
        );
        jPanel11Layout.setVerticalGroup(
            jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel11Layout.createSequentialGroup()
                .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldIdLetterOfOwnership, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel11Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldLetterOfOwnershipIdCadaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)))
                    .addGroup(jPanel11Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jButton6)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel12.setBorder(javax.swing.BorderFactory.createTitledBorder("Pridať nehnuteľnosť (18)"));

        jTextFieldRealtyLetterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRealtyLetterIdActionPerformed(evt);
            }
        });

        jTextFieldRealtyCadasterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRealtyCadasterIdActionPerformed(evt);
            }
        });

        jLabel9.setText("Číslo katastra * ");

        jLabel10.setText("Číslo listiny * ");

        jTextFieldRealtyId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRealtyIdActionPerformed(evt);
            }
        });

        jTextFieldRealtyAddress.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldRealtyAddressActionPerformed(evt);
            }
        });

        jLabel11.setText("Adresa *");

        jLabel12.setText("Súpisné číslo *");

        jButton7.setText("Pridaj");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });

        jLabel13.setText("Popis *");

        javax.swing.GroupLayout jPanel12Layout = new javax.swing.GroupLayout(jPanel12);
        jPanel12.setLayout(jPanel12Layout);
        jPanel12Layout.setHorizontalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jTextFieldRealtyLetterId, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldRealtyCadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldRealtyId, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jButton7)
                        .addGap(31, 31, 31))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldRealtyAddress, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldRealtyDescription)
                            .addGroup(jPanel12Layout.createSequentialGroup()
                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 83, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel12Layout.setVerticalGroup(
            jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel12Layout.createSequentialGroup()
                .addGap(8, 8, 8)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addComponent(jLabel12)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldRealtyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel12Layout.createSequentialGroup()
                            .addComponent(jLabel10)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldRealtyLetterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jButton7, javax.swing.GroupLayout.Alignment.TRAILING))
                    .addGroup(jPanel12Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldRealtyCadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel11)
                    .addComponent(jLabel13))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel12Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldRealtyAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldRealtyDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 115, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel9, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel11, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane8.addTab("Pridať", jPanel3);

        jPanel27.setBorder(javax.swing.BorderFactory.createTitledBorder(" Odstránenie majetkového podielu majiteľa  z listu vlastníctva (13)"));
        jPanel27.setToolTipText("");

        jLabel46.setText("Číslo katastra * ");

        jTextFieldDelete13CadasaterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete13CadasaterIdActionPerformed(evt);
            }
        });

        jButton20.setText("Odstráň");
        jButton20.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton20ActionPerformed(evt);
            }
        });

        jTextFieldDelete13LetterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete13LetterIdActionPerformed(evt);
            }
        });

        jLabel47.setText("Číslo listu * ");

        jTextFieldDelete13RC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete13RCActionPerformed(evt);
            }
        });

        jLabel48.setText("Rodné číslo * ");

        javax.swing.GroupLayout jPanel27Layout = new javax.swing.GroupLayout(jPanel27);
        jPanel27.setLayout(jPanel27Layout);
        jPanel27Layout.setHorizontalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldDelete13RC, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel48, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldDelete13CadasaterId)
                    .addComponent(jLabel46, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldDelete13LetterId)
                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel27Layout.setVerticalGroup(
            jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel27Layout.createSequentialGroup()
                .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton20, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel27Layout.createSequentialGroup()
                        .addComponent(jLabel48)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDelete13RC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel27Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel27Layout.createSequentialGroup()
                            .addComponent(jLabel47)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldDelete13LetterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel27Layout.createSequentialGroup()
                            .addComponent(jLabel46)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldDelete13CadasaterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel28.setBorder(javax.swing.BorderFactory.createTitledBorder(" Odstránenie listu vlastníctva  v zadanom katastrálnom území  (19)"));
        jPanel28.setToolTipText("");

        jLabel49.setText("Číslo nového listu* ");

        jTextFieldDelete19NewLetterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete19NewLetterIdActionPerformed(evt);
            }
        });

        jButton21.setText("Odstráň");
        jButton21.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton21ActionPerformed(evt);
            }
        });

        jTextFieldDelete19CadasterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete19CadasterIdActionPerformed(evt);
            }
        });

        jLabel50.setText("Číslo katastra * ");

        jTextFieldDelete19LetterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete19LetterIdActionPerformed(evt);
            }
        });

        jLabel51.setText("Číslo listu * ");

        javax.swing.GroupLayout jPanel28Layout = new javax.swing.GroupLayout(jPanel28);
        jPanel28.setLayout(jPanel28Layout);
        jPanel28Layout.setHorizontalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldDelete19LetterId, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel51, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(15, 15, 15)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDelete19NewLetterId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel49))
                .addGap(11, 11, 11)
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldDelete19CadasterId)
                    .addComponent(jLabel50, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(13, Short.MAX_VALUE))
        );
        jPanel28Layout.setVerticalGroup(
            jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel28Layout.createSequentialGroup()
                .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton21, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel28Layout.createSequentialGroup()
                        .addComponent(jLabel51)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDelete19LetterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel28Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel28Layout.createSequentialGroup()
                            .addComponent(jLabel50)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldDelete19CadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel28Layout.createSequentialGroup()
                            .addComponent(jLabel49)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldDelete19NewLetterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel30.setBorder(javax.swing.BorderFactory.createTitledBorder("Odstránenie nehnuteľnosti z listu vlastníctva   (20)"));
        jPanel30.setToolTipText("");

        jLabel54.setText("Súpisné číslo * ");

        jTextFieldDelete20RealtyId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete20RealtyIdActionPerformed(evt);
            }
        });

        jButton23.setText("Odstráň");
        jButton23.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton23ActionPerformed(evt);
            }
        });

        jTextFieldDelete20CadasterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete20CadasterIdActionPerformed(evt);
            }
        });

        jLabel55.setText("Číslo katastra * ");

        jTextFieldDelete20LetterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete20LetterIdActionPerformed(evt);
            }
        });

        jLabel56.setText("Číslo listu * ");

        javax.swing.GroupLayout jPanel30Layout = new javax.swing.GroupLayout(jPanel30);
        jPanel30.setLayout(jPanel30Layout);
        jPanel30Layout.setHorizontalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldDelete20LetterId, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel56, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldDelete20RealtyId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel54))
                .addGap(14, 14, 14)
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldDelete20CadasterId)
                    .addComponent(jLabel55, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel30Layout.setVerticalGroup(
            jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel30Layout.createSequentialGroup()
                .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel30Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton23, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel30Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel30Layout.createSequentialGroup()
                            .addComponent(jLabel54)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldDelete20RealtyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel30Layout.createSequentialGroup()
                            .addComponent(jLabel56)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldDelete20LetterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel30Layout.createSequentialGroup()
                            .addComponent(jLabel55)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldDelete20CadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jPanel31.setBorder(javax.swing.BorderFactory.createTitledBorder("Odstránenie katastra   (22)"));
        jPanel31.setToolTipText("");

        jButton24.setText("Odstráň");
        jButton24.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton24ActionPerformed(evt);
            }
        });

        jTextFieldDelete22CadasterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete22CadasterIdActionPerformed(evt);
            }
        });

        jLabel58.setText("Číslo katastra * ");

        jTextFieldDelete22NewCadasterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldDelete22NewCadasterIdActionPerformed(evt);
            }
        });

        jLabel57.setText("Číslo nového katastra * ");

        javax.swing.GroupLayout jPanel31Layout = new javax.swing.GroupLayout(jPanel31);
        jPanel31.setLayout(jPanel31Layout);
        jPanel31Layout.setHorizontalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel58, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldDelete22CadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel57, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addComponent(jTextFieldDelete22NewCadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel31Layout.setVerticalGroup(
            jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel31Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addComponent(jLabel57)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel31Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextFieldDelete22NewCadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton24, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel31Layout.createSequentialGroup()
                        .addComponent(jLabel58)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldDelete22CadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel27, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel28, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel31, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel30, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel27, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel28, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel30, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel31, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(190, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("Odstrániť", jPanel4);

        jPanel13.setBorder(javax.swing.BorderFactory.createTitledBorder("Zapísanie/Zmena majetkového podielu majiteľa. (12)"));

        jTextFieldOwnershipRC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldOwnershipRCActionPerformed(evt);
            }
        });

        jLabel14.setText("Rodné číslo *");

        jTextFieldOwnershipCadasterID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldOwnershipCadasterIDActionPerformed(evt);
            }
        });

        jLabel15.setText("Číslo katastra *");

        jTextFieldOwnershipLetterID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldOwnershipLetterIDActionPerformed(evt);
            }
        });

        jLabel16.setText("List vlastníctva*");

        jButton8.setText("ok");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jTextFieldOwnershipPercents.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldOwnershipPercentsActionPerformed(evt);
            }
        });

        jLabel21.setText("Počet percent podielu*");

        javax.swing.GroupLayout jPanel13Layout = new javax.swing.GroupLayout(jPanel13);
        jPanel13.setLayout(jPanel13Layout);
        jPanel13Layout.setHorizontalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldOwnershipRC, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldOwnershipLetterID, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldOwnershipCadasterID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldOwnershipPercents, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel13Layout.createSequentialGroup()
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel13Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );
        jPanel13Layout.setVerticalGroup(
            jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel13Layout.createSequentialGroup()
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldOwnershipRC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldOwnershipLetterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel13Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldOwnershipCadasterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel13Layout.createSequentialGroup()
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldOwnershipPercents, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8))
        );

        jPanel15.setBorder(javax.swing.BorderFactory.createTitledBorder("Zápis nového trvalého pobytu. (10)"));

        jTextFieldPrimaryResidenceRC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrimaryResidenceRCActionPerformed(evt);
            }
        });

        jLabel18.setText("Rodné číslo *");

        jTextFieldPrimaryResidencCadasterName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrimaryResidencCadasterNameActionPerformed(evt);
            }
        });

        jLabel19.setText("Názov katastrálneho územia *");

        jTextFieldPrimaryResidenceRealtyID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldPrimaryResidenceRealtyIDActionPerformed(evt);
            }
        });

        jLabel20.setText("Súpisné číslo *");

        jButton10.setText("ok");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel15Layout = new javax.swing.GroupLayout(jPanel15);
        jPanel15.setLayout(jPanel15Layout);
        jPanel15Layout.setHorizontalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrimaryResidenceRC, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrimaryResidencCadasterName, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldPrimaryResidenceRealtyID, javax.swing.GroupLayout.DEFAULT_SIZE, 190, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel15Layout.setVerticalGroup(
            jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel15Layout.createSequentialGroup()
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                        .addComponent(jTextFieldPrimaryResidenceRC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel15Layout.createSequentialGroup()
                        .addComponent(jLabel20)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldPrimaryResidenceRealtyID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel15Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldPrimaryResidencCadasterName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton10)))
        );

        jPanel26.setBorder(javax.swing.BorderFactory.createTitledBorder("Zmena majiteľa nehnuteľnosti. (11)"));

        jTextFieldTask11RCOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTask11RCOwnerActionPerformed(evt);
            }
        });

        jLabel42.setText("Rodné číslo majiteľa *");

        jTextFieldTask11RCNewOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTask11RCNewOwnerActionPerformed(evt);
            }
        });

        jLabel43.setText("Rodné číslo nového majiteľa *");

        jTextFieldTask11RealtyId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTask11RealtyIdActionPerformed(evt);
            }
        });

        jLabel44.setText("Súpisné číslo *");

        jButton19.setText("ok");
        jButton19.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton19ActionPerformed(evt);
            }
        });

        jTextFieldTask11CadasterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldTask11CadasterIdActionPerformed(evt);
            }
        });

        jLabel45.setText("Číslo katastra *");

        javax.swing.GroupLayout jPanel26Layout = new javax.swing.GroupLayout(jPanel26);
        jPanel26.setLayout(jPanel26Layout);
        jPanel26Layout.setHorizontalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldTask11RCOwner, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel42, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel44, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jTextFieldTask11RealtyId, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldTask11RCNewOwner, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel26Layout.createSequentialGroup()
                                .addComponent(jLabel43, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldTask11CadasterId, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel26Layout.createSequentialGroup()
                                .addComponent(jLabel45, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(11, 11, 11)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel26Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton19, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(115, 115, 115))
        );
        jPanel26Layout.setVerticalGroup(
            jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel26Layout.createSequentialGroup()
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel42)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldTask11RCOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel44)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jTextFieldTask11RealtyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel26Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel43)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTask11RCNewOwner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel26Layout.createSequentialGroup()
                        .addComponent(jLabel45)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTask11CadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton19))
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel26, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jPanel15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel13, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel26, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(125, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("Zmeniť", jPanel5);

        jPanel21.setBorder(javax.swing.BorderFactory.createTitledBorder("Vyhľadanie obyvateľa podľa rodného čísla a výpis jeho trvalého pobytu (2)"));

        jLabel34.setText("Rodné číslo * ");

        jTextFieldSelect2RC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelect2RCActionPerformed(evt);
            }
        });

        jButton15.setText("Vypíš");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel21Layout = new javax.swing.GroupLayout(jPanel21);
        jPanel21.setLayout(jPanel21Layout);
        jPanel21Layout.setHorizontalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel34, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldSelect2RC, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel21Layout.setVerticalGroup(
            jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel21Layout.createSequentialGroup()
                .addGroup(jPanel21Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSelect2RC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel34)
                    .addComponent(jButton15, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel22.setBorder(javax.swing.BorderFactory.createTitledBorder("Vyhľadanie nehnuteľnosti podľa súp. čísla a čísla / názvu kat. územia.  (1,5)"));
        jPanel22.setToolTipText("");

        jLabel35.setText("Súpisné číslo * ");

        jTextFieldSelect1_5RealtyId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelect1_5RealtyIdActionPerformed(evt);
            }
        });

        jLabel36.setText("Číslo / názov katastra * ");

        jTextFieldSelect1_5CadasterID_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelect1_5CadasterID_NameActionPerformed(evt);
            }
        });

        jComboBoxSelect1_5CadasterID_Name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Podľa názvu katastra", "Podľa čísla katastra" }));

        jButton16.setText("Vypíš");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel22Layout = new javax.swing.GroupLayout(jPanel22);
        jPanel22.setLayout(jPanel22Layout);
        jPanel22Layout.setHorizontalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSelect1_5RealtyId)
                    .addComponent(jLabel35, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSelect1_5CadasterID_Name)
                    .addComponent(jLabel36, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxSelect1_5CadasterID_Name, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel22Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel22Layout.setVerticalGroup(
            jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel22Layout.createSequentialGroup()
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel35)
                    .addComponent(jLabel36)
                    .addComponent(jComboBoxSelect1_5CadasterID_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel22Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSelect1_5RealtyId)
                    .addComponent(jTextFieldSelect1_5CadasterID_Name)
                    .addComponent(jButton16, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel24.setBorder(javax.swing.BorderFactory.createTitledBorder("Vyhľadanie nehnuteľnosti podľa súp. čísla a čísla / názvu kat. územia.  (1,5)"));
        jPanel24.setToolTipText("");

        jLabel38.setText("Číslo listu* ");

        jTextFieldSelect4_6LetterId1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelect4_6LetterId1ActionPerformed(evt);
            }
        });

        jLabel41.setText("Číslo / názov katastra * ");

        jTextFieldSelect4_6CadasterID_Name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelect4_6CadasterID_NameActionPerformed(evt);
            }
        });

        jComboBoxSelect4_6CadasterID_Name.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Podľa názvu katastra", "Podľa čísla katastra" }));

        jButton18.setText("Vypíš");
        jButton18.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton18ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel24Layout = new javax.swing.GroupLayout(jPanel24);
        jPanel24.setLayout(jPanel24Layout);
        jPanel24Layout.setHorizontalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSelect4_6LetterId1)
                    .addComponent(jLabel38, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSelect4_6CadasterID_Name)
                    .addComponent(jLabel41, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxSelect4_6CadasterID_Name, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel24Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel24Layout.setVerticalGroup(
            jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel24Layout.createSequentialGroup()
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel38)
                    .addComponent(jLabel41)
                    .addComponent(jComboBoxSelect4_6CadasterID_Name, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel24Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSelect4_6LetterId1)
                    .addComponent(jTextFieldSelect4_6CadasterID_Name)
                    .addComponent(jButton18, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel21, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel22, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel24, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel22, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22)
                .addComponent(jPanel24, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(354, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("Vyhľadanie", jPanel6);

        jButton3.setText("Zobraz katastre podľa mena");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("Zobraz katastre podľa  id");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jPanel14.setBorder(javax.swing.BorderFactory.createTitledBorder("Výpis nehnuteľností v zadanom katastrálnom území (7)"));

        jLabel17.setText("Názov katastra * ");

        jTextFieldSelectRealtiesNameCadaster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelectRealtiesNameCadasterActionPerformed(evt);
            }
        });

        jButton9.setText("Vypíš");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel14Layout = new javax.swing.GroupLayout(jPanel14);
        jPanel14.setLayout(jPanel14Layout);
        jPanel14Layout.setHorizontalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldSelectRealtiesNameCadaster, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel14Layout.setVerticalGroup(
            jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel14Layout.createSequentialGroup()
                .addGroup(jPanel14Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSelectRealtiesNameCadaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel17)
                    .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        jPanel20.setBorder(javax.swing.BorderFactory.createTitledBorder("Výpis všetkých nehnuteľností majiteľa aj s podielmi (9)"));

        jLabel33.setText("Rodné číslo * ");

        jButton13.setText("Vypíš");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jTextFieldSelectAllRealtiesOfOwnerRC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelectAllRealtiesOfOwnerRCActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel20Layout = new javax.swing.GroupLayout(jPanel20);
        jPanel20.setLayout(jPanel20Layout);
        jPanel20Layout.setHorizontalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel33, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTextFieldSelectAllRealtiesOfOwnerRC, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel20Layout.setVerticalGroup(
            jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel20Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel20Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSelectAllRealtiesOfOwnerRC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel19.setBorder(javax.swing.BorderFactory.createTitledBorder("Výpis nehnuteľností majiteľa v konkretnom katastri aj s podielmi (8)"));
        jPanel19.setToolTipText("");

        jLabel25.setText("Rodné číslo * ");

        jTextFieldSelectRealtiesOfOwnerRC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelectRealtiesOfOwnerRCActionPerformed(evt);
            }
        });

        jButton12.setText("Vypíš");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jLabel32.setText("Číslo katastra * ");

        jTextFieldSelectRealtiesOfOwnerCadasterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelectRealtiesOfOwnerCadasterIdActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel19Layout = new javax.swing.GroupLayout(jPanel19);
        jPanel19.setLayout(jPanel19Layout);
        jPanel19Layout.setHorizontalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel25, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSelectRealtiesOfOwnerRC, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jLabel32, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel19Layout.createSequentialGroup()
                        .addComponent(jTextFieldSelectRealtiesOfOwnerCadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel19Layout.setVerticalGroup(
            jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel19Layout.createSequentialGroup()
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel25)
                    .addComponent(jLabel32))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel19Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSelectRealtiesOfOwnerRC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSelectRealtiesOfOwnerCadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton12, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel23.setBorder(javax.swing.BorderFactory.createTitledBorder("Výpis všetkých osôb, ktoré majú trvalý pobyt v zadanej nehnuteľnosti (3)"));
        jPanel23.setToolTipText("");

        jLabel37.setText("Číslo katastra * ");

        jTextFieldSelect3CadasterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelect3CadasterIdActionPerformed(evt);
            }
        });

        jButton17.setText("Vypíš");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jTextFieldSelect3LetterId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelect3LetterIdActionPerformed(evt);
            }
        });

        jLabel39.setText("Číslo listu* ");

        jTextFieldSelect3RealtyId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldSelect3RealtyIdActionPerformed(evt);
            }
        });

        jLabel40.setText("Súpisné číslo* ");

        javax.swing.GroupLayout jPanel23Layout = new javax.swing.GroupLayout(jPanel23);
        jPanel23.setLayout(jPanel23Layout);
        jPanel23Layout.setHorizontalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSelect3CadasterId)
                    .addComponent(jLabel37, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTextFieldSelect3LetterId, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                    .addComponent(jLabel39, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel40, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldSelect3RealtyId, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel23Layout.setVerticalGroup(
            jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel23Layout.createSequentialGroup()
                .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel23Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel23Layout.createSequentialGroup()
                            .addComponent(jLabel37)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldSelect3CadasterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel23Layout.createSequentialGroup()
                            .addComponent(jLabel39)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldSelect3LetterId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel23Layout.createSequentialGroup()
                            .addComponent(jLabel40)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jTextFieldSelect3RealtyId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel23Layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addComponent(jButton17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel29.setBorder(javax.swing.BorderFactory.createTitledBorder("Výpis nehnuteľností v zadanom katastrálnom území podla popisu (cviko)"));

        jLabel52.setText("Čislo katastra * ");

        jTextFieldCvikoCadasterID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldCvikoCadasterIDActionPerformed(evt);
            }
        });

        jButton25.setText("Vypíš");
        jButton25.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton25ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel29Layout = new javax.swing.GroupLayout(jPanel29);
        jPanel29.setLayout(jPanel29Layout);
        jPanel29Layout.setHorizontalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel52, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jTextFieldCvikoCadasterID, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel29Layout.setVerticalGroup(
            jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel29Layout.createSequentialGroup()
                .addGroup(jPanel29Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldCvikoCadasterID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel52)
                    .addComponent(jButton25, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE))
                    .addComponent(jPanel14, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel19, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel23, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel29, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton4))
                .addGap(18, 18, 18)
                .addComponent(jPanel14, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(jPanel20, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel23, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel29, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(163, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("Výpis", jPanel7);

        jButton14.setText("Import");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton22.setText("Export");
        jButton22.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton22ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel25Layout = new javax.swing.GroupLayout(jPanel25);
        jPanel25.setLayout(jPanel25Layout);
        jPanel25Layout.setHorizontalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton22, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jPanel25Layout.setVerticalGroup(
            jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel25Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel25Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(jButton22))
                .addContainerGap(587, Short.MAX_VALUE))
        );

        jTabbedPane8.addTab("Import/Export", jPanel25);

        jLabel22.setText("Počet katastrov *");

        jTextFieldGeneratorCadastersCount.setText("1500");

        jLabel23.setText("Počet listov vlastnictva v jednom katastri *");

        jTextFieldGeneratorLettersCountOnCadaster.setText("100");

        jLabel24.setText("Počet obyvateľov*");

        jTextFieldGeneratorPersonsCount.setText("30000");

        jButton11.setText("Generuj");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jPanel16.setBorder(javax.swing.BorderFactory.createTitledBorder("Počet nehnuteľnosti na liste vlastnictva"));

        jTextFieldGeneratorRealtiesCountOnLetterFrom.setText("5");
        jTextFieldGeneratorRealtiesCountOnLetterFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGeneratorRealtiesCountOnLetterFromActionPerformed(evt);
            }
        });

        jLabel26.setText("Od *");

        jLabel27.setText("Do *");

        jTextFieldGeneratorRealtiesCountOnLetterTo.setText("5");

        javax.swing.GroupLayout jPanel16Layout = new javax.swing.GroupLayout(jPanel16);
        jPanel16.setLayout(jPanel16Layout);
        jPanel16Layout.setHorizontalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel26)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldGeneratorRealtiesCountOnLetterFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jLabel27)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldGeneratorRealtiesCountOnLetterTo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250))
        );
        jPanel16Layout.setVerticalGroup(
            jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel16Layout.createSequentialGroup()
                .addGroup(jPanel16Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel26)
                    .addComponent(jLabel27)
                    .addComponent(jTextFieldGeneratorRealtiesCountOnLetterFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldGeneratorRealtiesCountOnLetterTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel18.setBorder(javax.swing.BorderFactory.createTitledBorder("Počet obyvateľov v nehnuteľnosti"));

        jTextFieldGeneratorPersonsCountOnRealtyFrom.setText("3");

        jLabel30.setText("Od *");

        jLabel31.setText("Do *");

        jTextFieldGeneratorPersonsCountOnRealtyTo.setText("3");

        javax.swing.GroupLayout jPanel18Layout = new javax.swing.GroupLayout(jPanel18);
        jPanel18.setLayout(jPanel18Layout);
        jPanel18Layout.setHorizontalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel30)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldGeneratorPersonsCountOnRealtyFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jLabel31)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldGeneratorPersonsCountOnRealtyTo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(240, 240, 240))
        );
        jPanel18Layout.setVerticalGroup(
            jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel18Layout.createSequentialGroup()
                .addGroup(jPanel18Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(jLabel31)
                    .addComponent(jTextFieldGeneratorPersonsCountOnRealtyFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldGeneratorPersonsCountOnRealtyTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel17.setBorder(javax.swing.BorderFactory.createTitledBorder("Počet majetkových podielov na liste vlastnictva"));

        jTextFieldGeneratorOwnershipCountOnLetterFrom.setText("1");

        jLabel28.setText("Od *");

        jLabel29.setText("Do *");

        jTextFieldGeneratorOwnershipCountOnLetterTo.setText("5");
        jTextFieldGeneratorOwnershipCountOnLetterTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextFieldGeneratorOwnershipCountOnLetterToActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel17Layout = new javax.swing.GroupLayout(jPanel17);
        jPanel17.setLayout(jPanel17Layout);
        jPanel17Layout.setHorizontalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel28)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldGeneratorOwnershipCountOnLetterFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(jLabel29)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldGeneratorOwnershipCountOnLetterTo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(250, 250, 250))
        );
        jPanel17Layout.setVerticalGroup(
            jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel17Layout.createSequentialGroup()
                .addGroup(jPanel17Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(jLabel29)
                    .addComponent(jTextFieldGeneratorOwnershipCountOnLetterFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldGeneratorOwnershipCountOnLetterTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel23)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldGeneratorLettersCountOnCadaster, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel22)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTextFieldGeneratorCadastersCount, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel8Layout.createSequentialGroup()
                                .addComponent(jLabel24)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 175, Short.MAX_VALUE)
                                .addComponent(jTextFieldGeneratorPersonsCount, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(14, 14, 14))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, 287, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldGeneratorPersonsCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel24))
                .addGap(21, 21, 21)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldGeneratorCadastersCount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel22))
                .addGap(18, 18, 18)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel23)
                    .addComponent(jTextFieldGeneratorLettersCountOnCadaster, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 257, Short.MAX_VALUE)
                .addComponent(jButton11)
                .addContainerGap())
        );

        jTabbedPane8.addTab("Generátor", jPanel8);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane8)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jTabbedPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 651, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jScrollPane2.setViewportView(jTextPaneConsole);

        jButton2.setText("Vyčisti konzolu");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 838, Short.MAX_VALUE)
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 624, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        jTextPaneConsole.setText("");
        configTextPane();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextFieldGeneratorOwnershipCountOnLetterToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGeneratorOwnershipCountOnLetterToActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGeneratorOwnershipCountOnLetterToActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        String personsCount = jTextFieldGeneratorPersonsCount.getText();
        String cdastersCount = jTextFieldGeneratorCadastersCount.getText();
        String letterOnCadasterCount = jTextFieldGeneratorLettersCountOnCadaster.getText();
        String realtiesCountFrom = jTextFieldGeneratorRealtiesCountOnLetterFrom.getText();
        String realtiesCountTo = jTextFieldGeneratorRealtiesCountOnLetterTo.getText();
        String personsCountFrom = jTextFieldGeneratorPersonsCountOnRealtyFrom.getText();
        String personsCountTo = jTextFieldGeneratorPersonsCountOnRealtyTo.getText();
        String ownershipCountFrom = jTextFieldGeneratorOwnershipCountOnLetterFrom.getText();
        String ownershipCountTo = jTextFieldGeneratorOwnershipCountOnLetterTo.getText();

        if (isEmptyTextField(personsCount)
                || isEmptyTextField(cdastersCount)
                || isEmptyTextField(letterOnCadasterCount)
                || isEmptyTextField(realtiesCountFrom)
                || isEmptyTextField(realtiesCountTo)
                || isEmptyTextField(personsCountFrom)
                || isEmptyTextField(personsCountTo)
                || isEmptyTextField(ownershipCountFrom)
                || isEmptyTextField(ownershipCountTo)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String[] results = {
            tryParseToInteger(personsCount),
            tryParseToInteger(cdastersCount),
            tryParseToInteger(letterOnCadasterCount),
            tryParseToInteger(realtiesCountFrom),
            tryParseToInteger(realtiesCountTo),
            tryParseToInteger(personsCountFrom),
            tryParseToInteger(personsCountTo),
            tryParseToInteger(ownershipCountFrom),
            tryParseToInteger(ownershipCountTo)
        };
        for (String result : results) {
            if (result != null) {
                JOptionPane.showMessageDialog(this,
                        result,
                        "Pozor",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        if (getInt(realtiesCountFrom) > getInt(realtiesCountTo)) {
            JOptionPane.showMessageDialog(this,
                    "Počet nehnuteľnosti DO musí byť väčší alebo rovný ako počet nehnuteľnosti OD",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (getInt(personsCountFrom) > getInt(personsCountTo)) {
            JOptionPane.showMessageDialog(this,
                    "Počet obyvateľov nehnuteľností DO musí byť väčší alebo rovný ako počet nehnuteľnosti OD",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (getInt(ownershipCountFrom) > getInt(ownershipCountTo)) {
            JOptionPane.showMessageDialog(this,
                    "Počet majetkových podielov DO musí byť väčší alebo rovný ako počet nehnuteľnosti OD",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        core.generateData(
                getInt(cdastersCount),
                getInt(letterOnCadasterCount),
                0,
                getInt(realtiesCountFrom),
                getInt(realtiesCountTo),
                getInt(personsCount),
                getInt(personsCountFrom),
                getInt(personsCountTo),
                getInt(ownershipCountFrom),
                getInt(ownershipCountTo)
        );
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton18ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton18ActionPerformed
        String letterId = jTextFieldSelect4_6LetterId1.getText();
        String cadasterIdOrName = jTextFieldSelect4_6CadasterID_Name.getText();
        boolean isById = jComboBoxSelect4_6CadasterID_Name.getSelectedIndex() == 1;
        if (isEmptyTextField(letterId)
                || isEmptyTextField(cadasterIdOrName)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String result = tryParseToInteger(letterId);
        if (result != null) {
            JOptionPane.showMessageDialog(this,
                    result,
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (isById) {
            result = tryParseToInteger(cadasterIdOrName);
            if (result != null) {
                JOptionPane.showMessageDialog(this,
                        result,
                        "Pozor",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        }

        JsonObject resultObject = core.selectLetterOfOwnershipByLetterId_CadasterIdOrName(getInt(letterId), cadasterIdOrName, isById);
        if (resultObject.get("err") != null) {
            String message = resultObject.get("err").getAsString() + "\n";
            message += "******************************************************\n"
                    + " súpisné číslo: " + letterId + "\n"
                    + (isById ? " číslo katastra: " : " názov katastra: ") + cadasterIdOrName + "\n"
                    + "******************************************************";
            addToConsole(message, State.ERR);
            return;
        }

        if (resultObject.get("letter") != null) {
            String message = "****************************************************** Informácie o liste vlastníctva ***************************************************************\n"
                    + " číslo listu vlastníctva: " + resultObject.get("letter").getAsJsonObject().get("idLetter").getAsString() + "\n"
                    + " číslo katastra: " + resultObject.get("letter").getAsJsonObject().get("idCadaster").getAsString() + "\n"
                    + " názov katastra: " + resultObject.get("letter").getAsJsonObject().get("nameCadaster").getAsString() + "\n"
                    + " počet nehnuteľností: " + (resultObject.get("letter").getAsJsonObject().get("realties") != null ? "" + resultObject.get("letter").getAsJsonObject().get("realties").getAsJsonArray().size() : "0") + "\n"
                    + " počet majetkových podielov: " + (resultObject.get("letter").getAsJsonObject().get("ownerships") != null ? "" + resultObject.get("letter").getAsJsonObject().get("ownerships").getAsJsonArray().size() : "0") + "\n"
                    + "*********************************************************************************************************************************************************";
            addToConsole(message, State.SUC);

            if (resultObject.get("letter").getAsJsonObject().get("realties") != null) {
                String rowsHtml = "";
                for (JsonElement realtyElement : resultObject.get("letter").getAsJsonObject().get("realties").getAsJsonArray()) {
                    JsonObject realty = (JsonObject) realtyElement;
                    ArrayList<String> dataArr = new ArrayList<>();
                    dataArr.add(realty.get("id").getAsString());
                    dataArr.add(realty.get("address").getAsString());
                    dataArr.add(realty.get("desc").getAsString());

                    rowsHtml += "\n";
                    rowsHtml += managerHTML.createTableRow(dataArr);
                }

                String[] headerArr = new String[]{"Súpisné číslo", "Adresa", "popis",};
                String headerHtml = managerHTML.createTableHeader(headerArr);
                String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
                addHtmlComponent(tableHtml);
                addHtmlComponent("<br>");
            }
            if (resultObject.get("letter").getAsJsonObject().get("ownerships") != null) {
                String rowsHtml = "";
                for (JsonElement ownerElement : resultObject.get("letter").getAsJsonObject().get("ownerships").getAsJsonArray()) {
                    JsonObject owner = (JsonObject) ownerElement;
                    ArrayList<String> dataArr = new ArrayList<>();
                    dataArr.add(owner.get("rc").getAsString());
                    dataArr.add(owner.get("firstName").getAsString());
                    dataArr.add(owner.get("lastName").getAsString());
                    dataArr.add(owner.get("birthDate").getAsString());
                    dataArr.add(owner.get("share").getAsString());

                    rowsHtml += "\n";
                    rowsHtml += managerHTML.createTableRow(dataArr);
                }

                String[] headerArr = new String[]{"Rodné číslo", "Meno", "Priezvisko", "Dátum narodenia", "podiel"};
                String headerHtml = managerHTML.createTableHeader(headerArr);
                String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
                addHtmlComponent(tableHtml);
                addHtmlComponent("<br>");
            }
        }
    }//GEN-LAST:event_jButton18ActionPerformed

    private void jTextFieldSelect4_6CadasterID_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelect4_6CadasterID_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelect4_6CadasterID_NameActionPerformed

    private void jTextFieldSelect4_6LetterId1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelect4_6LetterId1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelect4_6LetterId1ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        String realtyId = jTextFieldSelect1_5RealtyId.getText();
        String cadasterIdOrName = jTextFieldSelect1_5CadasterID_Name.getText();
        boolean isById = jComboBoxSelect1_5CadasterID_Name.getSelectedIndex() == 1;
        if (isEmptyTextField(realtyId)
                || isEmptyTextField(cadasterIdOrName)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String result = tryParseToInteger(realtyId);
        if (result != null) {
            JOptionPane.showMessageDialog(this,
                    result,
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (isById) {
            result = tryParseToInteger(cadasterIdOrName);
            if (result != null) {
                JOptionPane.showMessageDialog(this,
                        result,
                        "Pozor",
                        JOptionPane.WARNING_MESSAGE);
                return;
            }
        }
        JsonObject resultObject = core.selectRealtiesByRealtyId_CadasterIdOrName(getInt(realtyId), cadasterIdOrName, isById);
        if (resultObject.get("err") != null) {
            String message = resultObject.get("err").getAsString() + "\n";
            message += "******************************************************\n"
                    + " súpisné číslo: " + realtyId + "\n"
                    + (isById ? " číslo katastra: " : " názov katastra: ") + cadasterIdOrName + "\n"
                    + "******************************************************";
            addToConsole(message, State.ERR);
            return;
        }

        String message = "******************************************************\n"
                + " súpisné číslo: " + resultObject.get("id").getAsString() + "\n"
                + " adresa: " + resultObject.get("address").getAsString() + "\n"
                + " popis: " + resultObject.get("desc").getAsString() + "\n"
                + " číslo listu vlastníctva: " + resultObject.get("idLetter").getAsString() + "\n"
                + " počet obyvateľov: " + resultObject.get("permanentResidencePersons").getAsJsonArray().size() + "\n"
                + "******************************************************";
        addToConsole(message, State.SUC);

        String rowsHtml = "";
        for (JsonElement personElement : resultObject.get("permanentResidencePersons").getAsJsonArray()) {
            JsonObject person = (JsonObject) personElement;
            ArrayList<String> dataArr = new ArrayList<>();
            dataArr.add(person.get("rc").getAsString());
            dataArr.add(person.get("firstName").getAsString());
            dataArr.add(person.get("lastName").getAsString());
            dataArr.add(person.get("birthDate").getAsString());

            rowsHtml += "\n";
            rowsHtml += managerHTML.createTableRow(dataArr);
        }

        String[] headerArr = {"Rodné číslo", "Meno", "Priezvisko", "Dátum narodenia"};
        String headerHtml = managerHTML.createTableHeader(headerArr);
        String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
        addHtmlComponent(tableHtml);
        addHtmlComponent("<br>");

        if (resultObject.get("letter") != null) {
            message = "****************************************************** Informácie o liste vlastníctva ***************************************************************\n"
                    + " číslo listu vlastníctva: " + resultObject.get("letter").getAsJsonObject().get("idLetter").getAsString() + "\n"
                    + " číslo katastra: " + resultObject.get("letter").getAsJsonObject().get("idCadaster").getAsString() + "\n"
                    + " názov katastra: " + resultObject.get("letter").getAsJsonObject().get("nameCadaster").getAsString() + "\n"
                    + " počet nehnuteľností: " + (resultObject.get("letter").getAsJsonObject().get("realties") != null ? "" + resultObject.get("letter").getAsJsonObject().get("realties").getAsJsonArray().size() : "0") + "\n"
                    + " počet majetkových podielov: " + (resultObject.get("letter").getAsJsonObject().get("ownerships") != null ? "" + resultObject.get("letter").getAsJsonObject().get("ownerships").getAsJsonArray().size() : "0") + "\n"
                    + "*********************************************************************************************************************************************************";
            addToConsole(message, State.SUC);

            if (resultObject.get("letter").getAsJsonObject().get("realties") != null) {
                rowsHtml = "";
                for (JsonElement realtyElement : resultObject.get("letter").getAsJsonObject().get("realties").getAsJsonArray()) {
                    JsonObject realty = (JsonObject) realtyElement;
                    ArrayList<String> dataArr = new ArrayList<>();
                    dataArr.add(realty.get("id").getAsString());
                    dataArr.add(realty.get("address").getAsString());
                    dataArr.add(realty.get("desc").getAsString());

                    rowsHtml += "\n";
                    rowsHtml += managerHTML.createTableRow(dataArr);
                }

                headerArr = new String[]{"Súpisné číslo", "Adresa", "popis",};
                headerHtml = managerHTML.createTableHeader(headerArr);
                tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
                addHtmlComponent(tableHtml);
                addHtmlComponent("<br>");
            }
            if (resultObject.get("letter").getAsJsonObject().get("ownerships") != null) {
                rowsHtml = "";
                for (JsonElement ownerElement : resultObject.get("letter").getAsJsonObject().get("ownerships").getAsJsonArray()) {
                    JsonObject owner = (JsonObject) ownerElement;
                    ArrayList<String> dataArr = new ArrayList<>();
                    dataArr.add(owner.get("rc").getAsString());
                    dataArr.add(owner.get("share").getAsString());

                    rowsHtml += "\n";
                    rowsHtml += managerHTML.createTableRow(dataArr);
                }

                headerArr = new String[]{"Rodné číslo", "podiel"};
                headerHtml = managerHTML.createTableHeader(headerArr);
                tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
                addHtmlComponent(tableHtml);
                addHtmlComponent("<br>");
            }
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jTextFieldSelect1_5CadasterID_NameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelect1_5CadasterID_NameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelect1_5CadasterID_NameActionPerformed

    private void jTextFieldSelect1_5RealtyIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelect1_5RealtyIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelect1_5RealtyIdActionPerformed

    private void jTextFieldSelect3RealtyIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelect3RealtyIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelect3RealtyIdActionPerformed

    private void jTextFieldSelect3LetterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelect3LetterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelect3LetterIdActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        String cadasterId = jTextFieldSelect3CadasterId.getText();
        String letterId = jTextFieldSelect3LetterId.getText();
        String realtyId = jTextFieldSelect3RealtyId.getText();
        if (isEmptyTextField(cadasterId)
                || isEmptyTextField(letterId)
                || isEmptyTextField(realtyId)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String result = tryParseToInteger(cadasterId);
        String result2 = tryParseToInteger(letterId);
        String result3 = tryParseToInteger(realtyId);
        if (result != null || result2 != null || result3 != null) {
            JOptionPane.showMessageDialog(this,
                    "Zadali ste text do poľa určeného pre číslo.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject resultObject = core.selectPermanentResidencePersons(getInt(cadasterId), getInt(letterId), getInt(realtyId));
        if (resultObject.get("err") != null) {
            String message = resultObject.get("err").getAsString() + "\n";
            message += "******************************************************\n"
                    + " číslo katastra: " + cadasterId + "\n"
                    + " číslo listu vlastníctva: " + letterId + "\n"
                    + " súpisné číslo: " + realtyId + "\n"
                    + "******************************************************";
            addToConsole(message, State.ERR);
            return;
        }

        String rowsHtml = "";
        for (JsonElement personElement : resultObject.get("permanentResidencePersons").getAsJsonArray()) {
            JsonObject person = (JsonObject) personElement;
            ArrayList<String> dataArr = new ArrayList<>();
            dataArr.add(person.get("rc").getAsString());
            dataArr.add(person.get("firstName").getAsString());
            dataArr.add(person.get("lastName").getAsString());
            dataArr.add(person.get("birthDate").getAsString());

            rowsHtml += "\n";
            rowsHtml += managerHTML.createTableRow(dataArr);
        }

        String[] headerArr = {"Rodné číslo", "Meno", "Priezvisko", "Dátum narodenia"};
        String headerHtml = managerHTML.createTableHeader(headerArr);
        String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
        addHtmlComponent(tableHtml);
        addHtmlComponent("<br>");
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jTextFieldSelect3CadasterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelect3CadasterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelect3CadasterIdActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        String Rc = jTextFieldSelect2RC.getText();
        if (isEmptyTextField(Rc)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject resultObject = core.selectPernamentResidenceByRC(Rc);
        if (resultObject.get("err") != null) {
            String message = resultObject.get("err").getAsString() + "\n";
            message += "******************************************************\n"
                    + " rodné číslo: " + Rc + "\n"
                    + "******************************************************";
            addToConsole(message, State.ERR);
            return;
        }

        String message = "******************************************************\n"
                + " súpisné číslo: " + resultObject.get("id").getAsString() + "\n"
                + " adresa: " + resultObject.get("address").getAsString() + "\n"
                + " popis: " + resultObject.get("desc").getAsString() + "\n"
                + " číslo listu vlastníctva: " + resultObject.get("idLetter").getAsString() + "\n"
                + " číslo katastra: " + resultObject.get("idCadaster").getAsString() + "\n"
                + " počet obyvateľov: " + resultObject.get("permanentResidencePersons").getAsJsonArray().size() + "\n"
                + "******************************************************";
        addToConsole(message, State.SUC);

        String rowsHtml = "";
        for (JsonElement personElement : resultObject.get("permanentResidencePersons").getAsJsonArray()) {
            JsonObject person = (JsonObject) personElement;
            ArrayList<String> dataArr = new ArrayList<>();
            dataArr.add(person.get("rc").getAsString());
            dataArr.add(person.get("firstName").getAsString());
            dataArr.add(person.get("lastName").getAsString());
            dataArr.add(person.get("birthDate").getAsString());

            rowsHtml += "\n";
            rowsHtml += managerHTML.createTableRow(dataArr);
        }

        String[] headerArr = {"Rodné číslo", "Meno", "Priezvisko", "Dátum narodenia"};
        String headerHtml = managerHTML.createTableHeader(headerArr);
        String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
        addHtmlComponent(tableHtml);
        addHtmlComponent("<br>");
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jTextFieldSelect2RCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelect2RCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelect2RCActionPerformed

    private void jTextFieldSelectAllRealtiesOfOwnerRCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelectAllRealtiesOfOwnerRCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelectAllRealtiesOfOwnerRCActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        String Rc = jTextFieldSelectAllRealtiesOfOwnerRC.getText();
        if (isEmptyTextField(Rc)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject resultObject = core.selectAllRealitiesOfOwner(Rc);
        if (resultObject.get("err") != null) {
            String message = resultObject.get("err").getAsString() + "\n";
            message += "******************************************************\n"
                    + " rodné číslo: " + Rc + "\n"
                    + "******************************************************";
            addToConsole(message, State.ERR);
            return;
        }
        String messageHeader = "************************************************************************************************************************************************************\n"
                + "                                                               rodné číslo: " + Rc + "\n"
                + "************************************************************************************************************************************************************";
        addToConsole(messageHeader, State.NON);

        for (JsonElement jsonElement : resultObject.get("realtiesOfOwner").getAsJsonArray()) {
            JsonObject owner = (JsonObject) jsonElement;
            String message = "******************************************************\n"
                    + " číslo katastru: " + owner.get("idCadaster").getAsString() + "\n"
                    + " číslo listu vlastníctva: " + owner.get("idLetter").getAsString() + "\n"
                    + " podliel: " + owner.get("share").getAsString() + "\n"
                    + " počet nehnuteľností: " + owner.get("realtiesCount").getAsString() + "\n"
                    + "******************************************************";
            addToConsole(message, State.SUC);

            String rowsHtml = "";
            for (JsonElement realtyElement : owner.get("realties").getAsJsonArray()) {
                JsonObject realty = (JsonObject) realtyElement;
                ArrayList<String> dataArr = new ArrayList<>();
                dataArr.add(realty.get("id").getAsString());
                dataArr.add(realty.get("address").getAsString());
                dataArr.add(realty.get("desc").getAsString());

                rowsHtml += "\n";
                rowsHtml += managerHTML.createTableRow(dataArr);
            }

            String[] headerArr = {"Súpisné číslo", "Adresa", "popis",};
            String headerHtml = managerHTML.createTableHeader(headerArr);
            String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
            addHtmlComponent(tableHtml);
            addHtmlComponent("<br>");
            addHtmlComponent("<br>");
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTextFieldSelectRealtiesOfOwnerCadasterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelectRealtiesOfOwnerCadasterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelectRealtiesOfOwnerCadasterIdActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        String cadasterId = jTextFieldSelectRealtiesOfOwnerCadasterId.getText();
        String Rc = jTextFieldSelectRealtiesOfOwnerRC.getText();
        if (isEmptyTextField(cadasterId)
                || isEmptyTextField(Rc)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String result = tryParseToInteger(cadasterId);
        if (result != null) {
            JOptionPane.showMessageDialog(this,
                    result,
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject resultObject = core.selectAllRealitiesOfOwnerByCadaster(Rc, getInt(cadasterId));
        if (resultObject.get("err") != null) {
            String message = resultObject.get("err").getAsString() + "\n";
            message += "******************************************************\n"
                    + " číslo katastra: " + cadasterId + "\n"
                    + " rodné číslo: " + Rc + "\n"
                    + "******************************************************";
            addToConsole(message, State.ERR);
            return;
        }

        for (JsonElement jsonElement : resultObject.get("realtiesOfOwner").getAsJsonArray()) {
            JsonObject owner = (JsonObject) jsonElement;
            String message = "******************************************************\n"
                    + " číslo listu vlastníctva: " + owner.get("idLetter").getAsString() + "\n"
                    + " podliel: " + owner.get("share").getAsString() + "\n"
                    + " počet nehnuteľností: " + owner.get("realtiesCount").getAsString() + "\n"
                    + "******************************************************";
            addToConsole(message, State.SUC);

            String rowsHtml = "";
            for (JsonElement realtyElement : owner.get("realties").getAsJsonArray()) {
                JsonObject realty = (JsonObject) realtyElement;
                ArrayList<String> dataArr = new ArrayList<>();
                dataArr.add(realty.get("id").getAsString());
                dataArr.add(realty.get("address").getAsString());
                dataArr.add(realty.get("desc").getAsString());

                rowsHtml += "\n";
                rowsHtml += managerHTML.createTableRow(dataArr);

            }
            String[] headerArr = {"Súpisné číslo", "Adresa", "popis",};
            String headerHtml = managerHTML.createTableHeader(headerArr);
            String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
            addHtmlComponent(tableHtml);
            addHtmlComponent("<br>");
        }
        if (resultObject.get("realtiesOfOwner").getAsJsonArray().size() == 0) {
            String message = "Majiteľ nevlastní žiadný majetok v zadanom katastri\n"
                    + "******************************************************\n"
                    + " číslo katastra: " + cadasterId + "\n"
                    + " rodné číslo: " + Rc + "\n"
                    + "******************************************************";
            addToConsole(message, State.NON);
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jTextFieldSelectRealtiesOfOwnerRCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelectRealtiesOfOwnerRCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelectRealtiesOfOwnerRCActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        String cadasterName = jTextFieldSelectRealtiesNameCadaster.getText();

        if (isEmptyTextField(cadasterName)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject result = core.selectAllRealitiesInCadaster(cadasterName);
        if (result.get("err") != null) {
            String message = result.get("err").getAsString() + "\n";
            message += "******************************************************\n"
                    + " názov katastra: " + cadasterName + "\n"
                    + "******************************************************";
            addToConsole(message, State.ERR);
            return;
        }

        String rowsHtml = "";
        for (JsonElement jsonElement : result.get("realties").getAsJsonArray()) {
            JsonObject realty = (JsonObject) jsonElement;
            ArrayList<String> dataArr = new ArrayList<>();
            dataArr.add(realty.get("id").getAsString());
            dataArr.add(realty.get("address").getAsString());
            dataArr.add(realty.get("desc").getAsString());

            rowsHtml += "\n";
            rowsHtml += managerHTML.createTableRow(dataArr);
        }

        String[] headerArr = {"Súpisné číslo", "Adresa", "popis",};
        String headerHtml = managerHTML.createTableHeader(headerArr);
        String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
        addHtmlComponent(tableHtml);
        addHtmlComponent("<br>");
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jTextFieldSelectRealtiesNameCadasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldSelectRealtiesNameCadasterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldSelectRealtiesNameCadasterActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        selectAllCadaster(core.selectAllCadastersById());
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        String cadasterName = jTextFieldPrimaryResidencCadasterName.getText();
        String idRealty = jTextFieldPrimaryResidenceRealtyID.getText();
        String rc = jTextFieldPrimaryResidenceRC.getText();

        if (isEmptyTextField(cadasterName)
                || isEmptyTextField(idRealty)
                || isEmptyTextField(rc)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String result = tryParseToInteger(idRealty);
        if (result != null) {
            JOptionPane.showMessageDialog(this,
                    result,
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        int addedResult = core.addOrChangePernamentResidence(cadasterName, rc, getInt(idRealty));
        String message = new String();
        switch (addedResult) {
            case 0:
                message = "Úspešne zapísanie nového trvalého pobytu obyvateľa .\n";
                break;
            case -1:
                message = "Neúspešne zapísanie nového trvalého pobytu obyvateľa. Nehnúteľnosť sa nenašla.\n";
                break;
            case -2:
                message = "Neúspešne zapísanie nového trvalého pobytu obyvateľa. Kataster sa nenašiel.\n";
                break;
            case -3:
                message = "Neúspešne zapísanie nového trvalého pobytu obyvateľa. Osoba sa nenašla.\n";
                break;
        }
        message += "******************************************************\n"
                + " názov katastra: " + cadasterName + "\n"
                + " súpisné číslo: " + idRealty + "\n"
                + " rodné číslo: " + rc + "\n"
                + "******************************************************";
        if (addedResult == 0) {
            addToConsole(message, State.SUC);
        } else {
            addToConsole(message, State.ERR);
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jTextFieldPrimaryResidenceRealtyIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrimaryResidenceRealtyIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrimaryResidenceRealtyIDActionPerformed

    private void jTextFieldPrimaryResidencCadasterNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrimaryResidencCadasterNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrimaryResidencCadasterNameActionPerformed

    private void jTextFieldPrimaryResidenceRCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldPrimaryResidenceRCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldPrimaryResidenceRCActionPerformed

    private void jTextFieldOwnershipPercentsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldOwnershipPercentsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldOwnershipPercentsActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        String idCadaster = jTextFieldOwnershipCadasterID.getText();
        String idLetter = jTextFieldOwnershipLetterID.getText();
        String rc = jTextFieldOwnershipRC.getText();
        String share = jTextFieldOwnershipPercents.getText();

        if (isEmptyTextField(idCadaster)
                || isEmptyTextField(idLetter)
                || isEmptyTextField(rc)
                || isEmptyTextField(share)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String result = tryParseToInteger(idCadaster);
        String result2 = tryParseToInteger(idLetter);
        String result3 = tryParseToDouble(share);
        if (result != null || result2 != null || result3 != null) {
            JOptionPane.showMessageDialog(this,
                    "Zadali ste text do poľa určeného pre číslo.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (Double.parseDouble(share.replace(',', '.')) <= 0) {
            JOptionPane.showMessageDialog(this,
                    "Zadajte kladnú hodnotu podielu",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject response = core.addOrChangeOwnershipShare(getInt(idCadaster), getInt(idLetter), rc, Double.parseDouble(share.replace(',', '.')));
        String message = new String();
        State state;
        if (response.get("err") != null) {
            message = response.get("err").getAsString() + "\n";
            state = State.ERR;
        } else {
            JsonObject responseFromSet = null;
            if (response.get("ownerships") != null) {
                DialogOwners dialogOwners = new DialogOwners(parent, rootPaneCheckingEnabled, response);
                if (dialogOwners.isCancel()) {
                    return;
                }
                responseFromSet = core.setOwnershipShares(getInt(idCadaster), getInt(idLetter), dialogOwners.getOwners());
            }
            message = "Úspešne zapísanie/zmena majetkového podielu majiteľa.\n";
            state = State.SUC;
            if (responseFromSet != null && response.get("err") != null) {
                message = responseFromSet.get("err").getAsString() + "\n";
                state = State.ERR;
            }
        }
        message += "******************************************************\n"
                + " číslo katastra: " + idCadaster + "\n"
                + " číslo listu vlastníctva: " + idLetter + "\n"
                + " rodné číslo: " + rc + "\n"
                + " podiel: " + share + " %\n"
                + "******************************************************";
        addToConsole(message, state);
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jTextFieldOwnershipLetterIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldOwnershipLetterIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldOwnershipLetterIDActionPerformed

    private void jTextFieldOwnershipCadasterIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldOwnershipCadasterIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldOwnershipCadasterIDActionPerformed

    private void jTextFieldOwnershipRCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldOwnershipRCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldOwnershipRCActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        String idLetter = jTextFieldRealtyLetterId.getText();
        String idCadaster = jTextFieldRealtyCadasterId.getText();
        String idRealty = jTextFieldRealtyId.getText();
        String address = jTextFieldRealtyAddress.getText();
        String desc = jTextFieldRealtyDescription.getText();

        if (isEmptyTextField(idLetter)
                || isEmptyTextField(idCadaster)
                || isEmptyTextField(idRealty)
                || isEmptyTextField(address)
                || isEmptyTextField(desc)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String result = tryParseToInteger(idLetter);
        String result2 = tryParseToInteger(idCadaster);
        String result3 = tryParseToInteger(idRealty);
        if (result != null || result2 != null || result3 != null) {
            JOptionPane.showMessageDialog(this,
                    "Zadali ste text do poľa určeného pre číslo.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        int addedResult = core.addRealty(getInt(idCadaster), getInt(idLetter), getInt(idRealty), address, desc);
        String message = new String();
        switch (addedResult) {
            case 0:
                message = "Úspešne vloženie nehnuteľnosti na list vlastníctva.\n";
                break;
            case -1:
                message = "Neúspešne vloženie nehnuteľnosti do katastra\n";
                break;
            case -2:
                message = "Neúspešne vloženie nehnuteľnosti na list vlastníctva. Ale na kataster bola vlozena\n";
                break;
            case -3:
                message = "List vlastníctva sa nenašiel. Ale na kataster bola nehnuteľnosť vložena.\n";
                break;
            case -4:
                message = "Kataster sa nenašiel\n";
                break;
        }
        message += "******************************************************\n"
                + " súpisné číslo: " + idRealty + "\n"
                + " číslo lisu vlastníctva: " + idLetter + "\n"
                + " číslo katastru: " + idCadaster + "\n"
                + " adresa: " + address + "\n"
                + " popis: " + desc + "\n"
                + "******************************************************";
        if (addedResult == 0) {
            addToConsole(message, State.SUC);
        } else {
            addToConsole(message, State.ERR);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jTextFieldRealtyAddressActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRealtyAddressActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRealtyAddressActionPerformed

    private void jTextFieldRealtyIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRealtyIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRealtyIdActionPerformed

    private void jTextFieldRealtyCadasterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRealtyCadasterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRealtyCadasterIdActionPerformed

    private void jTextFieldRealtyLetterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRealtyLetterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRealtyLetterIdActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        String idLetter = jTextFieldIdLetterOfOwnership.getText();
        String idCadaster = jTextFieldLetterOfOwnershipIdCadaster.getText();

        if (isEmptyTextField(idLetter)
                || isEmptyTextField(idCadaster)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String result = tryParseToInteger(idLetter);
        String result2 = tryParseToInteger(idCadaster);
        if (result != null || result2 != null) {
            JOptionPane.showMessageDialog(this,
                    "Zadali ste text do poľa určeného pre číslo.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        boolean addedResult = core.addLatterOfOwnership(getInt(idCadaster), getInt(idLetter));
        if (addedResult) {
            addToConsole("Úspešne vloženie listu vlastníctva.                          \n"
                    + "******************************************************\n"
                    + " id: " + idCadaster + "\n"
                    + " názov: " + idLetter + "\n"
                    + "******************************************************", State.SUC);
        } else {
            addToConsole("Neúspešne vloženie listu vlastníctva.                          \n"
                    + "******************************************************\n"
                    + " id: " + idCadaster + "\n"
                    + " názov: " + idLetter + "\n"
                    + "******************************************************", State.ERR);
        }
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jTextFieldLetterOfOwnershipIdCadasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLetterOfOwnershipIdCadasterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLetterOfOwnershipIdCadasterActionPerformed

    private void jTextFieldIdLetterOfOwnershipActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdLetterOfOwnershipActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdLetterOfOwnershipActionPerformed

    private void jTextFieldRCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldRCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldRCActionPerformed

    private void jTextFieldLastNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldLastNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldLastNameActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        String firstName = jTextFieldFirstName.getText();
        String lastName = jTextFieldLastName.getText();
        String RC = jTextFieldRC.getText();
        Date birthDate = jXDatePickerBirthDate.getDate();

        if (isEmptyTextField(firstName)
                || isEmptyTextField(lastName)
                || isEmptyTextField(RC)
                || birthDate == null) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        boolean addedResult = core.addPerson(firstName, lastName, RC, birthDate);
        if (addedResult) {
            addToConsole("Úspešne vloženie obyvateľa.                          \n"
                    + "******************************************************\n"
                    + " meno: " + firstName + "\n"
                    + " priezvisko: " + lastName + "\n"
                    + " RČ: " + RC + "\n"
                    + " dátum narodenia: " + core.formatDateWithoutTime(birthDate) + "\n"
                    + "******************************************************", State.SUC);
        } else {
            addToConsole("Neúspešne vloženie obyvateľa.                          \n"
                    + "******************************************************\n"
                    + " meno: " + firstName + "\n"
                    + " priezvisko: " + lastName + "\n"
                    + " RČ: " + RC + "\n"
                    + " dátum narodenia: " + core.formatDateWithoutTime(birthDate) + "\n"
                    + "******************************************************", State.ERR);
        }
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jTextFieldFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldFirstNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldFirstNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String id = jTextFieldIdCadaster.getText();
        String name = jTextFieldNameCadaster.getText();

        if (isEmptyTextField(id)
                || isEmptyTextField(name)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String result = tryParseToInteger(id);
        if (result != null) {
            JOptionPane.showMessageDialog(this,
                    result,
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        boolean addedResult = core.addCadaster(getInt(id), name);
        if (addedResult) {
            addToConsole("Úspešne vloženie katastra.                          \n"
                    + "******************************************************\n"
                    + " id: " + id + "\n"
                    + " názov: " + name + "\n"
                    + "******************************************************", State.SUC);
        } else {
            addToConsole("Neúspešne vloženie katastra.                          \n"
                    + "******************************************************\n"
                    + " id: " + id + "\n"
                    + " názov: " + name + "\n"
                    + "******************************************************", State.ERR);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextFieldNameCadasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldNameCadasterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldNameCadasterActionPerformed

    private void jTextFieldIdCadasterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldIdCadasterActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldIdCadasterActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        selectAllCadaster(core.selectAllCadastersByName());
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jTextFieldTask11RCOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTask11RCOwnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTask11RCOwnerActionPerformed

    private void jTextFieldTask11RCNewOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTask11RCNewOwnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTask11RCNewOwnerActionPerformed

    private void jTextFieldTask11RealtyIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTask11RealtyIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTask11RealtyIdActionPerformed

    private void jButton19ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton19ActionPerformed
        String idCadaster = jTextFieldTask11CadasterId.getText();
        String idRealty = jTextFieldTask11RealtyId.getText();
        String rcOwner = jTextFieldTask11RCOwner.getText();
        String rcNewOwner = jTextFieldTask11RCNewOwner.getText();

        if (isEmptyTextField(idCadaster)
                || isEmptyTextField(idRealty)
                || isEmptyTextField(rcOwner)
                || isEmptyTextField(rcNewOwner)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        if (rcOwner.equals(rcNewOwner)) {
            JOptionPane.showMessageDialog(this,
                    "Rodné čísla sú rovnaké.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        String result = tryParseToInteger(idCadaster);
        String result2 = tryParseToInteger(idRealty);
        if (result != null || result2 != null) {
            JOptionPane.showMessageDialog(this,
                    "Zadali ste text do poľa určeného pre číslo.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject response = core.changeOwner(rcOwner, rcNewOwner, getInt(idCadaster), getInt(idRealty));
        String message = new String();
        if (response.get("err") != null) {
            message = response.get("err").getAsString() + "\n";
        } else {
            message = response.get("suc").getAsString() + "\n";
        }

        message += "******************************************************\n"
                + " rodné číslo starého majiteľ: " + rcOwner + "\n"
                + " rodné číslo nového majiteľ: " + rcNewOwner + "\n"
                + " číslo katastra: " + idCadaster + "\n"
                + " súpisné číslo: " + idRealty + " %\n"
                + "******************************************************";
        if (response.get("err") != null) {
            addToConsole(message, State.ERR);
        } else {
            addToConsole(message, State.SUC);
        }
    }//GEN-LAST:event_jButton19ActionPerformed

    private void jTextFieldTask11CadasterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldTask11CadasterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldTask11CadasterIdActionPerformed

    private void jTextFieldDelete13CadasaterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete13CadasaterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete13CadasaterIdActionPerformed

    private void jButton20ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton20ActionPerformed
        String cadasterId = jTextFieldDelete13CadasaterId.getText();
        String letterId = jTextFieldDelete13LetterId.getText();
        String rc = jTextFieldDelete13RC.getText();
        if (isEmptyTextField(cadasterId)
                || isEmptyTextField(letterId)
                || isEmptyTextField(rc)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String result = tryParseToInteger(cadasterId);
        String result2 = tryParseToInteger(letterId);
        if (result != null || result2 != null) {
            JOptionPane.showMessageDialog(this,
                    "Zadali ste text do poľa určeného pre číslo.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject response = core.deleteOwnership(rc, getInt(cadasterId), getInt(letterId));
        String message = new String();
        if (response.get("err") != null) {
            message = response.get("err").getAsString() + "\n";
        } else {
            message = response.get("suc").getAsString() + "\n";
        }

        message += "******************************************************\n"
                + " rodné číslo: " + rc + "\n"
                + " číslo listu vlastníctva: " + letterId + "\n"
                + " číslo katastra: " + cadasterId + "\n"
                + "******************************************************";
        if (response.get("err") != null) {
            addToConsole(message, State.ERR);
        } else {
            addToConsole(message, State.SUC);
        }

    }//GEN-LAST:event_jButton20ActionPerformed

    private void jTextFieldDelete13LetterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete13LetterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete13LetterIdActionPerformed

    private void jTextFieldDelete13RCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete13RCActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete13RCActionPerformed

    private void jTextFieldDelete19NewLetterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete19NewLetterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete19NewLetterIdActionPerformed

    private void jButton21ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton21ActionPerformed
        String cadasterId = jTextFieldDelete19CadasterId.getText();
        String letterId = jTextFieldDelete19LetterId.getText();
        String newLetterId = jTextFieldDelete19NewLetterId.getText();
        if (isEmptyTextField(cadasterId)
                || isEmptyTextField(letterId)
                || isEmptyTextField(newLetterId)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String result = tryParseToInteger(cadasterId);
        String result2 = tryParseToInteger(letterId);
        String result3 = tryParseToInteger(newLetterId);
        if (result != null || result2 != null || result3 != null) {
            JOptionPane.showMessageDialog(this,
                    "Zadali ste text do poľa určeného pre číslo.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject response = core.deleteLetter(getInt(cadasterId), getInt(letterId), getInt(newLetterId));
        String message = new String();
        if (response.get("err") != null) {
            message = response.get("err").getAsString() + "\n";
        } else {
            message = response.get("suc").getAsString() + "\n";
        }

        message += "******************************************************\n"
                + " číslo listu vlastníctva: " + letterId + "\n"
                + " nové číslo listu vlastníctva: " + newLetterId + "\n"
                + " číslo katastra: " + cadasterId + "\n"
                + "******************************************************";
        if (response.get("err") != null) {
            addToConsole(message, State.ERR);
        } else {
            addToConsole(message, State.SUC);
        }
    }//GEN-LAST:event_jButton21ActionPerformed

    private void jTextFieldDelete19CadasterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete19CadasterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete19CadasterIdActionPerformed

    private void jTextFieldDelete19LetterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete19LetterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete19LetterIdActionPerformed

    private void jTextFieldDelete20RealtyIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete20RealtyIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete20RealtyIdActionPerformed

    private void jButton23ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton23ActionPerformed
        String cadasterId = jTextFieldDelete20CadasterId.getText();
        String realtyId = jTextFieldDelete20RealtyId.getText();
        String letterId = jTextFieldDelete20LetterId.getText();
        if (isEmptyTextField(cadasterId)
                || isEmptyTextField(realtyId)
                || isEmptyTextField(letterId)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String result = tryParseToInteger(cadasterId);
        String result2 = tryParseToInteger(realtyId);
        String result3 = tryParseToInteger(letterId);
        if (result != null || result2 != null || result3 != null) {
            JOptionPane.showMessageDialog(this,
                    "Zadali ste text do poľa určeného pre číslo.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject response = core.deleteRealty(getInt(cadasterId), getInt(realtyId), getInt(letterId));
        String message = new String();
        if (response.get("err") != null) {
            message = response.get("err").getAsString() + "\n";
        } else {
            message = response.get("suc").getAsString() + "\n";
        }

        message += "******************************************************\n"
                + " číslo listu vlastníctva: " + letterId + "\n"
                + " súpisné číslo nehnuteľnosti: " + realtyId + "\n"
                + " číslo katastra: " + cadasterId + "\n"
                + "******************************************************";
        if (response.get("err") != null) {
            addToConsole(message, State.ERR);
        } else {
            addToConsole(message, State.SUC);
        }
    }//GEN-LAST:event_jButton23ActionPerformed

    private void jTextFieldDelete20CadasterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete20CadasterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete20CadasterIdActionPerformed

    private void jTextFieldDelete20LetterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete20LetterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete20LetterIdActionPerformed

    private void jButton22ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton22ActionPerformed
        boolean result = core.save();
        if (result) {
            addToConsole("Úspešné uloženie", State.SUC);
        } else {
            addToConsole("Neúspešné uloženie", State.ERR);
        }
    }//GEN-LAST:event_jButton22ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        boolean result = core.load();
        if (result) {
            addToConsole("Úspešné načítanie", State.SUC);
        } else {
            addToConsole("Neúspešné načítanie", State.ERR);
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jTextFieldDelete22NewCadasterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete22NewCadasterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete22NewCadasterIdActionPerformed

    private void jButton24ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton24ActionPerformed
        String cadasterId = jTextFieldDelete22CadasterId.getText();
        String newCadasterId = jTextFieldDelete22NewCadasterId.getText();
        if (isEmptyTextField(cadasterId)
                || isEmptyTextField(newCadasterId)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        String result = tryParseToInteger(cadasterId);
        String result2 = tryParseToInteger(newCadasterId);
        if (result != null || result2 != null) {
            JOptionPane.showMessageDialog(this,
                    "Zadali ste text do poľa určeného pre číslo.",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }
        JsonObject response = core.deleteCadaster(getInt(cadasterId), getInt(newCadasterId));
        String message = new String();
        if (response.get("err") != null) {
            message = response.get("err").getAsString() + "\n";
        } else {
            message = response.get("suc").getAsString() + "\n";
        }

        message += "******************************************************\n"
                + " číslo katastra: " + cadasterId + "\n"
                + " číslo nového katastra: " + newCadasterId + "\n"
                + "******************************************************";
        if (response.get("err") != null) {
            addToConsole(message, State.ERR);
        } else {
            addToConsole(message, State.SUC);
        }

        if (response.getAsJsonArray("changedLettersId").size() > 0) {
            message = "*********************Zmenené čísla listov vlastníctva, pretože sa už v katastri nachádzali*********************************\n";
            addToConsole(message, State.NON);
            String rowsHtml = "";
            for (JsonElement jsonElement : response.get("changedLettersId").getAsJsonArray()) {
                JsonObject letter = (JsonObject) jsonElement;
                ArrayList<String> dataArr = new ArrayList<>();
                dataArr.add(letter.get("letterIdBeffore").getAsString());
                dataArr.add(letter.get("letterIdAfter").getAsString());

                rowsHtml += "\n";
                rowsHtml += managerHTML.createTableRow(dataArr);
            }

            String[] headerArr = {"Číslo listu vlastníctva STARÉ", "Číslo listu vlastníctva NOVÉ"};
            String headerHtml = managerHTML.createTableHeader(headerArr);
            String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
            addHtmlComponent(tableHtml);
            addHtmlComponent("<br>");
        }

        if (response.getAsJsonArray("changedRealtiesId").size() > 0) {
            message = "*********************Zmenené čísla nehnuteľností, pretože sa už v katastri nachádzali*********************************\n";
            addToConsole(message, State.NON);
            String rowsHtml = "";
            for (JsonElement jsonElement : response.get("changedRealtiesId").getAsJsonArray()) {
                JsonObject realty = (JsonObject) jsonElement;
                ArrayList<String> dataArr = new ArrayList<>();
                dataArr.add(realty.get("realtyIdBeffore").getAsString());
                dataArr.add(realty.get("realtyIdAfter").getAsString());

                rowsHtml += "\n";
                rowsHtml += managerHTML.createTableRow(dataArr);
            }

            String[] headerArr = {"Číslo nehnuteľnosti STARÉ", "Číslo nehnuteľnosti NOVÉ"};
            String headerHtml = managerHTML.createTableHeader(headerArr);
            String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
            addHtmlComponent(tableHtml);
            addHtmlComponent("<br>");
        }
    }//GEN-LAST:event_jButton24ActionPerformed

    private void jTextFieldDelete22CadasterIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldDelete22CadasterIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldDelete22CadasterIdActionPerformed

    private void jTextFieldGeneratorRealtiesCountOnLetterFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldGeneratorRealtiesCountOnLetterFromActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldGeneratorRealtiesCountOnLetterFromActionPerformed

    private void jTextFieldCvikoCadasterIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextFieldCvikoCadasterIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextFieldCvikoCadasterIDActionPerformed

    private void jButton25ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton25ActionPerformed
        String cadasterId = jTextFieldCvikoCadasterID.getText();

        if (isEmptyTextField(cadasterId)) {
            JOptionPane.showMessageDialog(this,
                    "Vyplnte všetky polička označene hviezdičkou(*)",
                    "Pozor",
                    JOptionPane.WARNING_MESSAGE);
            return;
        }

        JsonObject result = core.selectAllRealitiesByDescInCadaster(getInt(cadasterId));
        if (result.get("err") != null) {
            String message = result.get("err").getAsString() + "\n";
            message += "******************************************************\n"
                    + " id katastra: " + cadasterId + "\n"
                    + "******************************************************";
            addToConsole(message, State.ERR);
            return;
        }

        String rowsHtml = "";
        for (JsonElement jsonElement : result.get("realties").getAsJsonArray()) {
            JsonObject realty = (JsonObject) jsonElement;
            ArrayList<String> dataArr = new ArrayList<>();
            dataArr.add(realty.get("id").getAsString());
            dataArr.add(realty.get("address").getAsString());
            dataArr.add(realty.get("desc").getAsString());

            rowsHtml += "\n";
            rowsHtml += managerHTML.createTableRow(dataArr);
        }

        String[] headerArr = {"Súpisné číslo", "Adresa", "popis",};
        String headerHtml = managerHTML.createTableHeader(headerArr);
        String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
        addHtmlComponent(tableHtml);
        addHtmlComponent("<br>");
    }//GEN-LAST:event_jButton25ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                Main dialog = new Main(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    public static boolean isEmptyTextField(String input) {
        if (input == null || input.isEmpty() || input.trim().equals("")) {
            return true;
        }
        return false;
    }

    public static String tryParseToInteger(String term) {
        try {
            Integer.parseInt(term);
            return null;
        } catch (NumberFormatException e) {
            return "Zadali ste text do poľa určeného pre číslo.";
        }
    }

    public static String tryParseToDouble(String term) {
        try {
            Double.parseDouble(term.replace(',', '.'));
            return null;
        } catch (NumberFormatException e) {
            return "Zadali ste text do poľa určeného pre desatinné číslo.";
        }
    }

    private int getInt(String term) {
        return Integer.parseInt(term);
    }

    private void addToConsole(String value, State state) {
        switch (state) {
            case ERR:
                addColoredTextRow(value, Color.RED);
                break;
            case SUC:
                addColoredTextRow(value, new Color(0, 153, 0));
                break;
            case NON:
                addColoredTextRow(value, Color.BLACK);
                break;
        }
        addColoredTextRow("====================================================================================================", Color.BLACK);

    }

    private void addColoredTextRow(String text, Color color) {
        StyledDocument doc = jTextPaneConsole.getStyledDocument();

        Style style = jTextPaneConsole.addStyle("Color Style", null);
        StyleConstants.setForeground(style, color);

        try {
            doc.insertString(doc.getLength(), text + "\n", style);
        } catch (BadLocationException e) {
            e.printStackTrace();
        }
//        String rowHtml = "<pre style=\"color:" + color + "\">" + text + "</pre>";
//        addHtmlComponent(rowHtml);

    }

    private void selectAllCadaster(JsonArray result) {
        if (result == null) {
            addToConsole("V systéme niesu žiadne katastre", State.NON);
        } else {
            String rowsHtml = "";
            for (JsonElement jsonElement : result) {
                JsonObject cadaster = (JsonObject) jsonElement;
                ArrayList<String> dataArr = new ArrayList<>();
                dataArr.add(cadaster.get("id").getAsString());
                dataArr.add(cadaster.get("name").getAsString());
                dataArr.add(cadaster.get("realtiesCount").getAsString());
                dataArr.add(cadaster.get("letterOfOwnershipCount").getAsString());

                rowsHtml += "\n";
                rowsHtml += managerHTML.createTableRow(dataArr);
            }

            String[] headerArr = {"Id", "Názov", "počet nehnuteľnosťí", "počet listov vlastníctva"};
            String headerHtml = managerHTML.createTableHeader(headerArr);
            String tableHtml = managerHTML.createTable(headerHtml, rowsHtml);
            addHtmlComponent(tableHtml);
            addHtmlComponent("<br>");
        }
    }

    private void addHtmlComponent(String component) {
        HTMLEditorKit kit = (HTMLEditorKit) jTextPaneConsole.getEditorKit();
        HTMLDocument doc = (HTMLDocument) jTextPaneConsole.getDocument();
        try {
            kit.insertHTML(doc, doc.getLength(), component, 0, 0, null);

        } catch (BadLocationException ex) {
            Logger.getLogger(Main.class
                    .getName()).log(Level.SEVERE, null, ex);

        } catch (IOException ex) {
            Logger.getLogger(Main.class
                    .getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void configTextPane() {
        jTextPaneConsole.setContentType("text/html");
        Font f = new Font(Font.SANS_SERIF, 3, 13);
        jTextPaneConsole.setFont(f);
        HTMLEditorKit kit = new HTMLEditorKit();
        HTMLDocument doc = new HTMLDocument();
        jTextPaneConsole.setEditorKit(kit);
        jTextPaneConsole.setDocument(doc);
        jTextPaneConsole.setText("<html><head><style>" + Styles.CSS + "</style></head>");
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.ButtonGroup buttonGroup3;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton18;
    private javax.swing.JButton jButton19;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton20;
    private javax.swing.JButton jButton21;
    private javax.swing.JButton jButton22;
    private javax.swing.JButton jButton23;
    private javax.swing.JButton jButton24;
    private javax.swing.JButton jButton25;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JComboBox<String> jComboBoxSelect1_5CadasterID_Name;
    private javax.swing.JComboBox<String> jComboBoxSelect4_6CadasterID_Name;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JPanel jPanel13;
    private javax.swing.JPanel jPanel14;
    private javax.swing.JPanel jPanel15;
    private javax.swing.JPanel jPanel16;
    private javax.swing.JPanel jPanel17;
    private javax.swing.JPanel jPanel18;
    private javax.swing.JPanel jPanel19;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel20;
    private javax.swing.JPanel jPanel21;
    private javax.swing.JPanel jPanel22;
    private javax.swing.JPanel jPanel23;
    private javax.swing.JPanel jPanel24;
    private javax.swing.JPanel jPanel25;
    private javax.swing.JPanel jPanel26;
    private javax.swing.JPanel jPanel27;
    private javax.swing.JPanel jPanel28;
    private javax.swing.JPanel jPanel29;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel30;
    private javax.swing.JPanel jPanel31;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane8;
    private javax.swing.JTextField jTextFieldCvikoCadasterID;
    private javax.swing.JTextField jTextFieldDelete13CadasaterId;
    private javax.swing.JTextField jTextFieldDelete13LetterId;
    private javax.swing.JTextField jTextFieldDelete13RC;
    private javax.swing.JTextField jTextFieldDelete19CadasterId;
    private javax.swing.JTextField jTextFieldDelete19LetterId;
    private javax.swing.JTextField jTextFieldDelete19NewLetterId;
    private javax.swing.JTextField jTextFieldDelete20CadasterId;
    private javax.swing.JTextField jTextFieldDelete20LetterId;
    private javax.swing.JTextField jTextFieldDelete20RealtyId;
    private javax.swing.JTextField jTextFieldDelete22CadasterId;
    private javax.swing.JTextField jTextFieldDelete22NewCadasterId;
    private javax.swing.JTextField jTextFieldFirstName;
    private javax.swing.JTextField jTextFieldGeneratorCadastersCount;
    private javax.swing.JTextField jTextFieldGeneratorLettersCountOnCadaster;
    private javax.swing.JTextField jTextFieldGeneratorOwnershipCountOnLetterFrom;
    private javax.swing.JTextField jTextFieldGeneratorOwnershipCountOnLetterTo;
    private javax.swing.JTextField jTextFieldGeneratorPersonsCount;
    private javax.swing.JTextField jTextFieldGeneratorPersonsCountOnRealtyFrom;
    private javax.swing.JTextField jTextFieldGeneratorPersonsCountOnRealtyTo;
    private javax.swing.JTextField jTextFieldGeneratorRealtiesCountOnLetterFrom;
    private javax.swing.JTextField jTextFieldGeneratorRealtiesCountOnLetterTo;
    private javax.swing.JTextField jTextFieldIdCadaster;
    private javax.swing.JTextField jTextFieldIdLetterOfOwnership;
    private javax.swing.JTextField jTextFieldLastName;
    private javax.swing.JTextField jTextFieldLetterOfOwnershipIdCadaster;
    private javax.swing.JTextField jTextFieldNameCadaster;
    private javax.swing.JTextField jTextFieldOwnershipCadasterID;
    private javax.swing.JTextField jTextFieldOwnershipLetterID;
    private javax.swing.JTextField jTextFieldOwnershipPercents;
    private javax.swing.JTextField jTextFieldOwnershipRC;
    private javax.swing.JTextField jTextFieldPrimaryResidencCadasterName;
    private javax.swing.JTextField jTextFieldPrimaryResidenceRC;
    private javax.swing.JTextField jTextFieldPrimaryResidenceRealtyID;
    private javax.swing.JTextField jTextFieldRC;
    private javax.swing.JTextField jTextFieldRealtyAddress;
    private javax.swing.JTextField jTextFieldRealtyCadasterId;
    private javax.swing.JTextField jTextFieldRealtyDescription;
    private javax.swing.JTextField jTextFieldRealtyId;
    private javax.swing.JTextField jTextFieldRealtyLetterId;
    private javax.swing.JTextField jTextFieldSelect1_5CadasterID_Name;
    private javax.swing.JTextField jTextFieldSelect1_5RealtyId;
    private javax.swing.JTextField jTextFieldSelect2RC;
    private javax.swing.JTextField jTextFieldSelect3CadasterId;
    private javax.swing.JTextField jTextFieldSelect3LetterId;
    private javax.swing.JTextField jTextFieldSelect3RealtyId;
    private javax.swing.JTextField jTextFieldSelect4_6CadasterID_Name;
    private javax.swing.JTextField jTextFieldSelect4_6LetterId1;
    private javax.swing.JTextField jTextFieldSelectAllRealtiesOfOwnerRC;
    private javax.swing.JTextField jTextFieldSelectRealtiesNameCadaster;
    private javax.swing.JTextField jTextFieldSelectRealtiesOfOwnerCadasterId;
    private javax.swing.JTextField jTextFieldSelectRealtiesOfOwnerRC;
    private javax.swing.JTextField jTextFieldTask11CadasterId;
    private javax.swing.JTextField jTextFieldTask11RCNewOwner;
    private javax.swing.JTextField jTextFieldTask11RCOwner;
    private javax.swing.JTextField jTextFieldTask11RealtyId;
    private javax.swing.JTextPane jTextPaneConsole;
    private org.jdesktop.swingx.JXDatePicker jXDatePickerBirthDate;
    // End of variables declaration//GEN-END:variables

    public enum State {
        ERR,
        SUC,
        NON
    }
}
